extends layout

block content




  if Notification
      .notification-overlay
          .notificationred
              p= Notification
      script.
          setTimeout(function() {
              var notificationOverlay = document.querySelector(".notification-overlay");
              notificationOverlay.parentNode.removeChild(notificationOverlay);
          }, 3000);
  
  #exampleModalCenter.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        // Modal-Header
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Mehrere Kunden hinzufügen
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        // Modal-Body
        .modal-body
          // Formular innerhalb des Popups
          form(ref='uploadMehrereKunden', id='uploadMehrereKunden', action='/products/uploadMehrereKunden', method='post', enctype='multipart/form-data')
            .row
              .col-md-6
                .form-group
                  select#selectedOption.form-control.form-select(name='selectedOption' onchange='checkSelectedOption(this)')
                    option(value='1') Lufa
                    option(value='2') CLAAS
                    option(value='3') GSAgri 
                    option(value='4') LWK-Niedersachsen
                    option(value='5') Mählmann
                    option(value='6') Sonstiges
              .col-md-6
                .form-group
                  select#selectedOptionWinterung.form-control.form-select(name='selectedOptionWinterung')
                    option(value='1') Ab 01.01 Winterung
                    option(value='2') Ab 15.02 Frühe Sommerung
                    option(value='3') Ab 15.03 Späte Sommerung 
            .input-group.mb-3
              input.input-group-text(type='file', name='zipFiles', accept=".kml,.geojson,.shp,.zip" multiple)
            // Hier können Sie den Inhalt des Modals hinzufügen
            // Modal-Footer
            .modal-footer
              input.btn-primary.button.btn(type='submit', value='Hochladen!')

  #exampleModalCenterEinKunde.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Kunden hinzufügen
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body
          form(ref='uploadFormRegister' action='/products/uploadFormRegister' method='post' enctype='multipart/form-data')
            .row
              .col-md-6
                .form-group
                  select#selectedOption.form-control.form-select(name='selectedOption' onchange='checkSelectedOption(this)')
                    option(value='1') Lufa
                    option(value='2') CLAAS
                    option(value='3') GSAgri 
                    option(value='4') LWK-Niedersachsen
                    option(value='5') Mählmann
                    option(value='6') Sonstiges
              .col-md-6
                .form-group
                  select#selectedOptionWinterung.form-control.form-select(name='selectedOptionWinterung')
                    option(value='1') Ab 01.01 Winterung
                    option(value='2') Ab 15.02 Frühe Sommerung
                    option(value='3') Ab 15.03 Späte Sommerung 
            .row
              .col-md-6
                .form-group
                  input.form-control(type='text' placeholder='Vorname' name='vorname')
              .col-md-6
                .form-group
                  input.form-control(type='text' placeholder='Nachname' name='nachname' )
            .row
              .col-md-6
                .form-group
                  input.form-control(type='email' name='email' placeholder='E-Mail' autocomplete="off")
              .col-md-6
                .form-group
                  input.form-control(type='tel' name='telefonnummer' placeholder='Telefonnummer')
            .row
              .col-md-6
                .form-group
                  input.form-control(type='text' name='ort' placeholder='Ort') 
              .col-md-6
                .form-group
                  input.form-control(type='number' name='plz' placeholder='Postleitzahl')
            .row
              .col-md-6
                .form-group
                  input.form-control(type='text' name='strasse' placeholder='Straße') 
              .col-md-6
                .form-group
                  input.form-control(type='number' name='hausnummer' placeholder='Hausnummer') 
            .row
              .col-md-6
                .form-group
                  input.form-control(type='number' id='kundenid' name='kundenid' placeholder='KundenID' disabled)
              .col-md-6
                .form-group
                  input.form-control(type='password', placeholder='Passwort', name='password', required, autocomplete="off")
            .input-group.mb-3
              input.input-group-text(type='file', name='sampleFile', accept=".kml,.geojson,.shp,.zip")               
            .modal-footer
              input.btn-primary.button.btn(type='submit', value='Hochladen!')

  .modal.fade(id="kundenwirklichloeschen" tabindex="-1" aria-labelledby="meinModalLabel" aria-hidden="true")
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Kunden wirklich löschen?
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-footer
          button.btn.btn-danger.button.btn(type='button' id='btnDeleteCustomer' onclick='deleteCustomer()') Löschen
          button.btn.button.btn(type='button' data-dismiss='modal' style='color: white !important ; background-color: red !important' , onclick='resetCheckbox()') Abbrechen


  - var daten = DatenZuZiehen.lufa.alle

  .container-fluid.flex-grow-1.justify-content-center.secondary-backgroundcolor
    .row
      .col-1
      .col-10
        .row.py-4
          .col-6(style='display: flex; align-items: center;')
            button.btn.btn-primary(type='button' data-toggle='modal' data-target='#exampleModalCenterEinKunde' style='margin-right:20px;') Kunde hinzufügen  
            button.btn.btn-primary(type='button' disabled data-toggle='modal' data-target='#exampleModalCenter' style='margin-right:20px;') Mehrere Kunden hinzufügen  

          .col-4(style='display: flex; align-items: center;')
            table.table-striped.table-responsive-sm
              thead
                tr.accent-backgroundcolor.titelTRAbdatum
                  td.secondary-color.tab-item.Abdatum.active(scope="col", onClick="changeActiveTab('alle','abdatum')", name="alle") Alle 
                  td.secondary-color.tab-item.Abdatum(scope="col", onClick="changeActiveTab('winterung','abdatum')", name="winterung") Winterung
                  td.secondary-color.tab-item.Abdatum(scope="col", onClick="changeActiveTab('fSommerung','abdatum')", name="fSommerung") frühe Sommerung
                  td.secondary-color.tab-item.Abdatum(scope="col", onClick="changeActiveTab('sSommerung','abdatum')", name="sSommerung") späte Sommerung
          .col-2(style='display: flex; align-items: center;')
            input(type='checkbox', checked=true, id='nurZuZiehendeKunden', name='nurZuZiehendeKunden')
            label(for='nurZuZiehendeKunden' style='padding-left: 10px; padding-bottom: 0px') Ziehende Proben
        .row.py-4
          .col#tableContainer
            table#example.table.table-striped.table-responsive-sm
              thead
                tr.accent-backgroundcolor.titelTR
                  td.secondary-color.tab-item.active(scope="col", onClick="changeActiveTab('lufa','geodatengeber')", name="lufa") Lufa
                  td.secondary-color.tab-item(scope="col", onClick="changeActiveTab('claas','geodatengeber')", name="claas") Claas
                  td.secondary-color.tab-item(scope="col", onClick="changeActiveTab('gsagri','geodatengeber')", name="gsagri") GSAgri
                  td.secondary-color.tab-item(scope="col", onClick="changeActiveTab('lwk','geodatengeber')", name="lwk") LWK-Niedersachsen
                  td.secondary-color.tab-item(scope="col", onClick="changeActiveTab('maehlmann','geodatengeber')", name="maehlmann") Mählmann
                  td.secondary-color.tab-item(scope="col", onClick="changeActiveTab('sonstiges','geodatengeber')", name="sonstiges") Sonstiges
                tr.primary-backgroundcolor
                  th.accent-color(scope="col") ID
                  th.accent-color(scope="col") Vorname
                  th.accent-color(scope="col") Nachname
                  th.accent-color(scope="col") Telefonnummer
                  th.accent-color(scope="col") E-Mail
                  th.accent-color(scope="col") Wohnort
                  th.accent-color(scope="col") Anzahl Flächen
                  th.accent-color(scope="col" style="background-color: withe; display: flex; justify-content: space-between; ") 
                    span Löschen
                    input#auswaehlenCheckbox(type='checkbox' style='margin-right: 5px;')
              tbody#tableBody
                each dat in daten
                  tr.table-secondary
                    td.col-1
                      a.link-dark.link-offset-2.link-underline.link-underline-opacity-0.text-dark.text-success(href='/products/'+dat.KUNDENNUMMER)= dat.KUNDENNUMMER
                    td= dat.VORNAME
                    td= dat.NACHNAME
                    td= dat.TELEFONNUMMER
                    td= dat.E_MAIL
                    td= dat.ORT
                    td= dat.AnzahlFlaechen
                    td.bestellung
                      input.normal(type='checkbox', id="deleteCheckbox", name=dat.KUNDENNUMMER)
            .row.py-4
              .col-10
              .col-1.d-flex.justify-content-end
                button.btn.btn-primary(id='loeschenButton'  type='button' data-toggle='modal' data-target='#kundenwirklichloeschen' style='display:none ; margin-right:20px; margin-top:10px') Löschen  
              .col-1.d-flex.justify-content-end
                button.btn.btn-primary(id='kmlButton'  type='button' onclick='createKML()' style='margin-top:10px') KML  

  script.
      var activeTapGeodatengeber = 'lufa'
      var activeTapAbdatum = 'alle'

      $(document).ready(function () {
        $('#example').DataTable();
      });


      eventlisterget();


      function eventlisterget() {
          var auswaehlenCheckbox = document.querySelector('input#auswaehlenCheckbox');
          var neuBeantragenCheckboxes = document.querySelectorAll('input#deleteCheckbox');
          var loeschenButton = document.getElementById('loeschenButton');

          auswaehlenCheckbox.addEventListener('change', function () {
              var isChecked = auswaehlenCheckbox.checked;

              neuBeantragenCheckboxes.forEach(function (checkbox) {
                  checkbox.checked = isChecked;
              });

              if (isChecked) {
                  loeschenButton.style.display = 'block';
              } else {
                  loeschenButton.style.display = 'none';
              }
          });
      }


      // Diese Funktion prüft, ob mindestens eine Checkbox ausgewählt ist
      function checkIfAnyCheckboxChecked() {
          var checkboxes = document.querySelectorAll('[id="deleteCheckbox"]');
          var isChecked = false;
          checkboxes.forEach(function (checkbox) {
              if (checkbox.checked) {
                  isChecked = true;
              }
          });
          return isChecked;
      }

      // Hier fügen Sie die Eventlistener für die Checkboxen hinzu, um den Button entsprechend zu steuern
      document.querySelectorAll('[id="deleteCheckbox"]').forEach(function (checkbox) {
          checkbox.addEventListener('change', function () {
              var loeschenButton = document.getElementById('loeschenButton');
              if (checkIfAnyCheckboxChecked()) {
                  loeschenButton.style.display = 'block';
              } else {
                  loeschenButton.style.display = 'none';
              }
          });
      });


    // Diese Funktion initialisiert die Eventlistener
    function initializeEventListeners() {
        // Auswahlfeld im Kopf der Tabelle
        var auswaehlenCheckbox = document.querySelector('input#auswaehlenCheckbox');
        auswaehlenCheckbox.addEventListener('change', toggleDeleteButton);

        // Alle einzelnen Checkboxen in den Zeilen
        document.querySelectorAll('[id="deleteCheckbox"]').forEach(function (checkbox) {
            checkbox.addEventListener('change', toggleDeleteButton);
        });
    }

    // Diese Funktion zeigt den "Löschen"-Button an oder versteckt ihn basierend auf dem Zustand der Checkboxen
    function toggleDeleteButton() {
        var loeschenButton = document.getElementById('loeschenButton');
        if (checkIfAnyCheckboxChecked()) {
            loeschenButton.style.display = 'block';
        } else {
            loeschenButton.style.display = 'none';
        }
    }

    // Diese Funktion prüft, ob mindestens eine Checkbox ausgewählt ist
    function checkIfAnyCheckboxChecked() {
        var checkboxes = document.querySelectorAll('[id="deleteCheckbox"]');
        var isChecked = false;
        checkboxes.forEach(function (checkbox) {
            if (checkbox.checked) {
                isChecked = true;
            }
        });
        return isChecked;
    }

    // Initialisieren der Eventlistener
    initializeEventListeners();


      var Daten = !{JSON.stringify(Daten)};
      var DatenZuZiehen = !{JSON.stringify(DatenZuZiehen)};

      function changeActiveTab(tabName,category) {
         if(category === 'abdatum'){
          activeTapAbdatum = tabName;
        } else if (category ==='geodatengeber') {
          activeTapGeodatengeber = tabName;
        }
        var allTds = document.querySelectorAll('td');
        allTds.forEach(function(td) {
            td.classList.remove('active');
        });

        changeTable();
        var reiter = document.querySelector(`td[name="${activeTapAbdatum}"]`);
        reiter.classList.add('active');
        reiter = document.querySelector(`td[name="${activeTapGeodatengeber}"]`);
        reiter.classList.add('active');

      }


      function getAbDatum(geodatengeber){
        if(activeTapAbdatum === 'alle'){
          return geodatengeber.alle;
        } else if(activeTapAbdatum === 'winterung'){
          return geodatengeber.winterung;
        } else if(activeTapAbdatum === 'fSommerung'){
          return geodatengeber.fSommerung;
        } else if(activeTapAbdatum === 'sSommerung'){
          return geodatengeber.sSommerung;
        }
      }

      function changeTable() {
        var nurzuZiehen = document.getElementById('nurZuZiehendeKunden');

        if(nurzuZiehen.checked === false){
          var newDaten  = Daten;
        } else {
          var newDaten  = DatenZuZiehen;
        }

        if (activeTapGeodatengeber === 'lufa')  {
          newDaten = getAbDatum(newDaten.lufa);
        } else if (activeTapGeodatengeber === 'claas')  {
          newDaten = getAbDatum(newDaten.claas);
        } if (activeTapGeodatengeber === 'gsagri')  {
          newDaten = getAbDatum(newDaten.gsagri);
        } else if (activeTapGeodatengeber === 'lwk')  {
          newDaten = getAbDatum(newDaten.lwkniedersachsen);
        } else if (activeTapGeodatengeber === 'maehlmann')  {
          newDaten = getAbDatum(newDaten.maehlmann);
        } else if (activeTapGeodatengeber === 'sonstiges')  {
          newDaten = getAbDatum(newDaten.sonstiges);
        } 


        var containerHTML = `
          <div class="col">
            <table id="example" class="table table-striped">
              <thead>
                <tr class="accent-backgroundcolor titelTR">
                  <td class="secondary-color tab-item" name="lufa" onClick="changeActiveTab('lufa','geodatengeber')">Lufa</td>
                  <td class="secondary-color tab-item" name="claas" onClick="changeActiveTab('claas','geodatengeber')">Claas</td>
                  <td class="secondary-color tab-item" name="gsagri" onClick="changeActiveTab('gsagri','geodatengeber')">GSAgri</td>
                  <td class="secondary-color tab-item" name="lwk" onClick="changeActiveTab('lwk','geodatengeber')">LWK-Niedersachsen</td>
                  <td class="secondary-color tab-item" name="maehlmann" onClick="changeActiveTab('maehlmann','geodatengeber')">Mählmann</td>
                  <td class="secondary-color tab-item" name="sonstiges" onClick="changeActiveTab('sonstiges','geodatengeber')">Sonstiges</td>
                </tr>
                <tr class="primary-backgroundcolor">
                  <th class="accent-color">ID</th>
                  <th class="accent-color">Vorname</th>
                  <th class="accent-color">Nachname</th>
                  <th class="accent-color">Telefonnummer</th>
                  <th class="accent-color">E-Mail</th>
                  <th class="accent-color">Wohnort</th>
                  <th class="accent-color">Anzahl Flächen</th>
                  <th class="accent-color" scope="col" style="background-color: white; display: flex; justify-content: space-between;">
                    <span>Löschen</span>
                    <input id="auswaehlenCheckbox" type="checkbox" style="margin-right: 5px;">
                  </th>
                </tr>
              </thead>
              <tbody id="tableBody">
        `;



        if(Array.isArray(newDaten)){

          newDaten.forEach(function (dat) {
            // Neue Daten hinzufügen
            containerHTML += `
              <tr class="table-secondary">
                <td>
                  <a class="link-dark link-offset-2 link-underline link-underline-opacity-0 text-dark text-success" href="/products/${dat.KUNDENNUMMER}">${dat.KUNDENNUMMER}</a>
                </td>
                <td>${dat.VORNAME}</td>
                <td>${dat.NACHNAME}</td>
                <td>${dat.TELEFONNUMMER}</td>
                <td>${dat.E_MAIL}</td>
                <td>${dat.ORT}</td>
                <td>${dat.AnzahlFlaechen}</td>
                <td class="bestellung"><input class="normal" id="deleteCheckbox" type="checkbox" name="${dat.KUNDENNUMMER}"></td>
              </tr>
            `;
          });
        }

        containerHTML += `
                </tbody>
              </table>
                <div class="row py-4">
                  <div class="col-10"></div>
                  <div class="col-1 d-flex justify-content-end">
                    <button class="btn btn-primary" id="loeschenButton" type="button" data-toggle="modal" data-target="#kundenwirklichloeschen" style="display:none; margin-right:20px; margin-top:10px">Löschen</button>
                  </div>
                  <div class="col-1 d-flex justify-content-end">
                    <button class="btn btn-primary" id="kmlButton" type="button" onclick="createKML()" style="margin-top:10px">KML</button>
                  </div>
                </div>


            </div>
        `;

        $('#tableContainer').html(containerHTML);
        $('#example').DataTable({});

        eventlisterget();
        initializeEventListeners();
      }
      
      function checkSelectedOption(selectElement) {
        var kundenIdInput = document.getElementById('kundenid');
        if (selectElement.value === '1') {
          kundenIdInput.disabled = true;
          kundenIdInput.required = false;
        } else {
          kundenIdInput.disabled = false;
          kundenIdInput.required = true;

        }
      }

    document.getElementById('nurZuZiehendeKunden').addEventListener('change', function() {
      changeActiveTab(activeTapGeodatengeber)
    });

    var checkboxZumLoeschen ='';

    function deleteCustomer() {
      var customerToDelete = document.querySelectorAll('input[id="deleteCheckbox"]');
      var customerNames = [];

      customerToDelete.forEach(function(input) {
          if (input.checked) {
              customerNames.push(input.name);
          }
      });


      fetch('/products/deleteCustomer', {
        method: 'PUT',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ kundeloeschen: customerNames })
      })
      .then(response => response.status)
      .then(status => handleResponse(status))
      .catch(error => console.error('Error:', error));
    }

    function createKML() {
      var customerToDelete = document.querySelectorAll('input[id="deleteCheckbox"]');
      var customerNames = [];

      customerToDelete.forEach(function(input) {
          if (input.checked) {
              customerNames.push(input.name);
          }
      });



      fetch('/products/generateKmlFileByProducts', {
          method: 'PUT',
          credentials: 'include',
          headers: {
          'Content-Type': 'application/json',
          },
          body: JSON.stringify({ customerNames: customerNames})
      })

      .then(response => response.text())
      .then(url => {
          var blob = new Blob([url], { type: 'application/vnd.google-earth.kml+xml' });
          var link = document.createElement("a");
          link.href = URL.createObjectURL(blob);
          link.download = "FleacheMehrere.kml";
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
      })
      .catch(error => console.error('Error:', error));
    }

    function handleResponse(status) {
      if (status === 200) {
        location.reload()
      } 
    }


