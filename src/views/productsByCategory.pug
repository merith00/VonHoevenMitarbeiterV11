extends layout

block content
  script(src="/javascript/productshhhh.js")
  script(src="/javascript/functions.js") 
  - var userCart = []; 


  if messages.success
    .notificationgreen
      p= messages.success
      script.
        setTimeout(function() {
          var notification = document.querySelector(".notificationgreen");
          notification.parentNode.removeChild(notification);
        }, 3000);
  div#loadingIndicator(style='display: none; position: fixed; z-index: 10000; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); color: white; text-align: center; line-height: 100vh;')
      div.spinner-border(text='loading') 

  .container-fluid.secondary-backgroundcolor.flex-grow-1.text-center
    .row(style="height:100%;")
      .col
        .row.py-4
          - if (UserCart.products.length > 0)
            .row
              .col-3.d-flex.align-items-center.justify-content-center
                button.btn.btn-primary(type='button', id='kmlbutton', onClick='kmlerstellen("'+UserCart.products[0].KUNDENNUMMER+'")') KML
              .col-3.d-flex.align-items-center.justify-content-center
                button.btn.btn-primary(type='button', data-toggle='modal' data-target='#ModalProbeMussGezogenWerden' id='ModalProbeSollGezogenWerden', class='button') Bearbeiten 
              .col-3.d-flex.align-items-center.justify-content-center
                button.btn.btn-primary(type='button', data-toggle='modal' data-target='#ModalProbeWurdeGezogen' id='updatebutton', class='button') Gezogen
              .col-3.d-flex.align-items-center.justify-content-center                
                button.btn.btn-primary(type='button', id='pdfButton', disabled = true, data-toggle='modal', data-target='#ModalPDFErstellen') PDF erstellen

        .row#tableContainer
            .container(style='width: 100%; height: 80vh; overflow-y: auto;')
              .tab-content.text-center
                .table-container.table-responsive
                  table#example.table.table-striped.table-responsive-sm
                    thead
                      tr.accent-backgroundcolor.titelTR
                        td.secondary-color(scope="col") Name
                        td.secondary-color(scope="col") Fläche
                        td.secondary-color(scope="col") 60cm
                        td.secondary-color(scope="col") N<sub class='subscript'>min
                        td.secondary-color(scope="col") S<sub class='subscript'>min
                        td.secondary-color(scope="col") Humus
                        td.secondary-color(scope="col") C/N
                        td.secondary-color(scope="col") Stichtag
                        td.secondary-color(scope="col", style="display: flex; justify-content: space-between; align-items: center;")
                            span Auswählen
                            input#auswaehlenCheckbox(type='checkbox' style='margin-right: 5px;')
                    tbody
                      each product in UserCart.productsAlle
                        tr.table-secondary
                          - if (product.FLAECHENNAME === null || product.FLAECHENNAME === "")
                              td(name=product.ARTIKELNR)= product.ARTIKELNR
                          - else 
                              td(name=product.ARTIKELNR)= product.ARTIKELNR +","+ product.FLAECHENNAME
                          td.bestellung
                            img(style='width:auto; max-height:20px' name = 'imgFlaeche'+product.ARTIKELNR, src=product.FOTO, alt='Fleache')
                          td.tdright
                            input(type='checkbox', name='neunzigCM' + product.ARTIKELNR, checked = (product.TIEFENID==2), value='1', onchange='changeNeunzigCm("' + product.ARTIKELNR + '", "' + product.KUNDENNUMMER + '", this.checked)')
                          td.bestellung
                            input#CheckboxMangat(type='checkbox', style='background-color: red;' name='CheckboxMangat'+product.ARTIKELNR, value=(product.statusmangat), checked=(product.enthält_mangat === 'J') disabled ='true')
                          td.bestellung
                            input.normal#CheckboxEmin.checkbox-custom(type='checkbox', name='CheckboxEmin'+product.ARTIKELNR, value=(product.statusemin), checked=(product.enthält_emin === 'J'), disabled ='true')
                          td.bestellung
                            input.normal#CheckboxStickstoff(type='checkbox', name='CheckboxStickstoff'+product.ARTIKELNR, value=(product.statusstickstoff), checked=(product.enthält_stickstoff === 'J'), disabled ='true')
                          td.bestellung
                            input.normal#CheckboxCn(type='checkbox', name='CheckboxCn'+product.ARTIKELNR, value=(product[14]), checked=(product[14] === 1), disabled ='true')
                          - if (product.STARTDATUM && product.statusmangat === 3)
                                td am #{product.STARTDATUM.toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit'})}
                          - else 
                              td ab #{product.ABDATUM.toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit'})}
                          td.tdright
                            input#neuBeantragen(type='checkbox', name='neuBeantragen'+product.ARTIKELNR, value='1')
      .col
        .row.py-4
          .col-3.d-flex.align-items-center.justify-content-center
            button.btn.btn-primary(type='button', data-toggle='modal', data-target='#ModalKundenDatenBearbeiten', id='KundenDatenBearbeiten') Kundendaten
          .col-3.d-flex.align-items-center.justify-content-center
            button.btn.btn-primary(type='button', onclick="changeColor(" + kundenDatenVomAusgewaehltenUser.KUNDENNUMMER + ")", id='farbeAendern') Farbe ändern
          .col-3.d-flex.align-items-center.justify-content-center
            button.btn.btn-primary(type='button', data-toggle='modal', data-target='#ModalFleachenHinzufeugen', id='FleachenHinzufeugen', disabled) Flächen hinzufügen
          .col-3
            input(type='checkbox', checked=true, id='nurZuZiehendeKunden', name='nurZuZiehendeKunden')
            label(for='nurZuZiehendeKunden' style='padding-left: 10px; padding-bottom: 0px') Ziehende Proben

        .row
          div#map(style='width: 100%; height: 80vh;')

  #ModalFleachenHinzufeugen.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Flächen hinzufügen
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body
          form(ref='uploadMehrereKunden', id='uploadMehrereKunden', action='/products/uploadMehrereKunden', method='post', enctype='multipart/form-data')
            .input-group.mb-3
              input.input-group-text(type='file', name='zipFiles', accept=".kml,.geojson,.shp,.zip" multiple)
            .modal-footer
              input.btn-primary.button.btn(type='submit', value='Hochladen!')

  #ModalProbeWurdeGezogen.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Probe bearbeitet am:
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body 
          .input-group.date(data-provide="datepicker")
            input#datepicker(type="date" class="form-control")
            .input-group-addon
              span.glyphicon.glyphicon-th
        .modal-body
            button.btn.btn-primary(type='button', style='margin-top: 5px', id='probeSollgezogenWerdenButton', onClick="ProbeWurdeGezogen(document.getElementById('datepicker').value"+","+dieUserID+")", class='btn btn-primary button float-right bestellbutton') Proben gezogen
    div#loadingIndicator(style='display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); color: white; text-align: center; line-height: 100vh;')
      div.spinner-border(text='loading') 

  #ModalProbeMussGezogenWerden.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white Beproben am:
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body 
          select#seasonSelector.form-select(type="select" class="form-control")
            option(value="1") Ab 01.01 Winterung
            option(value="2") Ab 15.02 Frühe Sommerung
            option(value="3") Ab 15.03 Späte Sommerung
        .modal-body
            button.btn.btn-primary(type='button', style='margin-top: 5px', id='kmlbutton', onClick="funktionFleacheSollBearbeitetWerden(document.getElementById('seasonSelector').value"+","+dieUserID+")", class='btn btn-primary button float-right bestellbutton') Proben ziehen
    div#loadingIndicatorProbeMussGezogenWerden(style='display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); color: white; text-align: center; line-height: 100vh;')
      div.spinner-border(text='loading') 

  #ModalKundenDatenBearbeiten.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
      .modal-dialog.modal-dialog-centered(role='document')
          .modal-content.neutral-backgroundcolor
              .modal-header
                  h5#exampleModalLongTitle.modal-title.text-white= 'Kundendaten ändern von KdNR: ' + kundenDatenVomAusgewaehltenUser.KUNDENNUMMER
                  button.close(type='button' data-dismiss='modal' aria-label='Close')
                      span(aria-hidden='true') &times;
              .modal-body
                  form#uploadFormRegister(ref='uploadFormRegister' action='/products/setUpdateDatenVomKunden' method='put' enctype='multipart/form-data')
                      input(type='hidden' name='kundennummer' value=kundenDatenVomAusgewaehltenUser.KUNDENNUMMER)
                      .row
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='vorname') Vorname
                                  - if (kundenDatenVomAusgewaehltenUser.VORNAME)
                                      input.form-control(type='text' value=kundenDatenVomAusgewaehltenUser.VORNAME  name='vorname')
                                  - else 
                                      input.form-control(type='text' placeholder='Vorname'  name='vorname')
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='nachname') Nachname
                                  - if (kundenDatenVomAusgewaehltenUser.NACHNAME)
                                      input.form-control(type='text' value=kundenDatenVomAusgewaehltenUser.NACHNAME  name='nachname')
                                  - else
                                      input.form-control(type='text' placeholder='Nachname' name='nachname')
                      .row
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='email') E-Mail
                                  - if (kundenDatenVomAusgewaehltenUser.E_MAIL)
                                      input.form-control(type='text' value=kundenDatenVomAusgewaehltenUser.E_MAIL name='email')
                                  - else
                                      input.form-control(type='email' name='email' placeholder='E-Mail' autocomplete="off")
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='telefonnummer') Telefonnummer
                                  - if (kundenDatenVomAusgewaehltenUser.TELEFONNUMMER)
                                      input.form-control(type='tel' value=kundenDatenVomAusgewaehltenUser.TELEFONNUMMER  name='telefonnummer')
                                  - else
                                      input.form-control(type='tel' name='telefonnummer' placeholder='Telefonnummer')
                      .row
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='ort') Ort
                                  - if (kundenDatenVomAusgewaehltenUser.ORT)
                                      input.form-control(type='text' value=kundenDatenVomAusgewaehltenUser.ORT  name='ort')
                                  - else
                                      input.form-control(type='text' name='ort' placeholder='Ort') 
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='plz') Postleitzahl
                                  - if (kundenDatenVomAusgewaehltenUser.POSTLEITZAHL)
                                      input.form-control(type='number' value=kundenDatenVomAusgewaehltenUser.POSTLEITZAHL  name='plz')
                                  - else
                                      input.form-control(type='number' name='plz' placeholder='Postleitzahl')
                      .row
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='strasse') Straße
                                  - if (kundenDatenVomAusgewaehltenUser.STRASSE)
                                      input.form-control(type='text' value=kundenDatenVomAusgewaehltenUser.STRASSE  name='strasse')
                                  - else
                                      input.form-control(type='text' name='strasse' placeholder='Straße') 
                          .col-md-6
                              .form-group.kundenInfo
                                  label(for='hausnummer') Hausnummer
                                  - if (kundenDatenVomAusgewaehltenUser.HAUSNUMMER)
                                      input.form-control(type='number' value=kundenDatenVomAusgewaehltenUser.HAUSNUMMER name='hausnummer')
                                  - else
                                      input.form-control(type='number' name='hausnummer' placeholder='Hausnummer') 
                      .modal-footer
                        input.btn-primary.button.btn(type='submit', value='Speichern')

  #ModalPDFErstellen.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
    .modal-dialog.modal-dialog-centered(role='document')
      .modal-content.neutral-backgroundcolor
        .modal-header
          h5#exampleModalLongTitle.modal-title.text-white PDF erstellen:
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body 
          select#seasonSelectorPDF.form-select(type="select" class="form-control" name='voranschrift')
            - if(kundenDatenVomAusgewaehltenUser.GEODATENGEBERID !==3)
              option(value=0)= 'Keine Zweitschrift'
            each entry in zweitanschrift
              option(value=entry.ID)= entry.VORANSCHRIFT +' '+ entry.VORNAME + ' ' + entry.NACHNAME
            - if(kundenDatenVomAusgewaehltenUser.GEODATENGEBERID ===3)
              option(value=0)= 'Keine Zweitschrift'
            
        .modal-body
            button.btn.btn-primary(type='button', id='pdfButton', class='btn btn-primary button float-right bestellbutton', onclick="createAndDownloadPDF(document.getElementById('seasonSelectorPDF').value"+","+dieUserID+")") PDF erstellen

  script(src="/javascript/productsByCategory.js")
  script(src="/javascript/productshhhh.js")
  script.

    var getDieAnschrift = !{JSON.stringify(zweitanschrift)};
    var coordinatesArrayBestellt = !{JSON.stringify(FleachenBestellt)};

    setUpdateMap();

    $(document).ready(function () {
      $('#example').DataTable();
    });

    var kundenDatenVomAusgewaehltenUser = !{JSON.stringify(kundenDatenVomAusgewaehltenUser)};
    var UserCart = !{JSON.stringify(UserCart)};
    var TabellenDaten = !{JSON.stringify(UserCart)};
    var date = new Date(kundenDatenVomAusgewaehltenUser.GEBURTSDATUM);
    var formattedDate = date.toISOString().split('T')[0];

    const today = new Date();
    const todayFormatted = today.toISOString().split('T')[0];



    document.getElementById('datepicker').value = todayFormatted;

    aktivateEventlistener();


    function aktivateEventlistener(){
        var auswaehlenCheckbox = document.querySelector('input#auswaehlenCheckbox');
        var neuBeantragenCheckboxes = document.querySelectorAll('input#neuBeantragen');
        var pdfButton = document.getElementById('pdfButton');

        neuBeantragenCheckboxes.forEach(function (checkbox) {
          checkbox.addEventListener('change', function () {
            var allChecked = true;
            pdfButton.disabled = true;
            auswaehlenCheckbox.checked = false;
            neuBeantragenCheckboxes.forEach(function (eachCheckbox) {
              if (!eachCheckbox.checked) {
                  allChecked = false;
              }
              if(eachCheckbox.checked){
                pdfButton.disabled = false;
              }
            });
            if (allChecked) {
              auswaehlenCheckbox.checked = true;
            }
          });
        });


        auswaehlenCheckbox.addEventListener('change', function () {
          var isChecked = auswaehlenCheckbox.checked;
          pdfButton.disabled = isChecked ? false : true;

          neuBeantragenCheckboxes.forEach(function (checkbox) {
            checkbox.checked = isChecked;
          });
        });
      
    }

    document.getElementById('nurZuZiehendeKunden').addEventListener('change', function() {
      changeActiveTab()
    });

    function changeActiveTab() {
        changeTable();
      }

    function changeTable() {

      var newDaten;

      if(nurzuZiehen.checked === false){
        newDaten  = TabellenDaten.products;
      } else {
        newDaten  = TabellenDaten.productsAlle;
      }


      var containerHTML = `
        <div class="row">
            <div class="tab-content text-center">
              <div class="table-container table-responsive">
                <table id="example" class="table table-striped table-responsive-sm">
                  <thead>
                    <tr class="accent-backgroundcolor titelTR">
                      <td class="secondary-color" scope="col">Name</td>
                      <td class="secondary-color" scope="col">Fläche</td>
                      <td class="secondary-color" scope="col">60cm</td>
                      <td class="secondary-color" scope="col">N<sub class="subscript">min</sub></td>
                      <td class="secondary-color" scope="col">S<sub class="subscript">min</sub></td>
                      <td class="secondary-color" scope="col">Humus</td>
                      <td class="secondary-color" scope="col">C/N</td>
                      <td class="secondary-color" scope="col">Stichtag</td>
                      <td class="secondary-color" scope="col" style="display: flex; justify-content: space-between; align-items: center;">
                        <span>Auswählen</span>
                        <input id="auswaehlenCheckbox" type="checkbox" style="margin-right: 5px;">
                      </td>
                    </tr>
                  </thead>
                  <tbody>

      `;



      if(Array.isArray(newDaten)){

        newDaten.forEach(function (product) {
          var datum; 

          if(product.STARTDATUM && product.statusmangat === 3){
            datum = 'am ' + formatiereDatum(product.STARTDATUM) 
          } else {
            datum = 'ab ' + formatiereDatum(product.ABDATUM) 
          }


          // Neue Daten hinzufügen
          containerHTML += `
            <tr class="table-secondary">
              <td name=${product.ARTIKELNR} >${product.ARTIKELNR } , ${product.FLAECHENNAME }</td>
              <td class="bestellung">
                <img style="width: auto; max-height: 20px;" name="imgFlaeche${product.ARTIKELNR}" src="${product.FOTO }" alt="Fläche">
              </td>
              <td class="tdright">
                <input type="checkbox" name="neunzigCM${product.ARTIKELNR}" value="1" onchange='changeNeunzigCm("${product.ARTIKELNR}", "${product.KUNDENNUMMER}", this.checked)' ${product.TIEFENID==2 ? "checked" : "" }
              </td>
              <td class="bestellung">
                <input id="CheckboxMangat" type="checkbox" style="background-color: red;" name="CheckboxMangat${product.ARTIKELNR}" value="${product.statusmangat}" ${product.enthält_mangat === 'J' ? "checked" : "" } disabled="true">
              </td>
              <td class="bestellung">
                <input class="normal" id="CheckboxEmin" type="checkbox" name="CheckboxEmin${product.ARTIKELNR}" value="${product.statusemin}" ${product.enthält_emin === 'J' ? "checked" : "" } disabled="true">
              </td>
              <td class="bestellung">
                <input class="normal" id="CheckboxStickstoff" type="checkbox" name="CheckboxStickstoff${product.ARTIKELNR}" value="${product.statusstickstoff}" ${product.enthält_stickstoff === 'J' ? "checked" : "" } disabled="true">
              </td>
              <td class="bestellung">
                <input class="normal" id="CheckboxCn" type="checkbox" name="CheckboxCn${product.ARTIKELNR}" value="${product[14]}" ${product[14] === 1 ? "checked" : ""} disabled="true">
              </td>
              <td>
                ${datum}
              </td>
              <td class="tdright">
                <input id="neuBeantragen" type="checkbox" name="neuBeantragen${product.ARTIKELNR}" value="1">
              </td>
            </tr>
          `;
        });
      }

      containerHTML += `
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
      `;

      $('#tableContainer').html(containerHTML);
      $('#example').DataTable({});


      aktivateEventlistener();
      //initializeEventListeners();
    }



    function initializeEventListeners() {
        var auswaehlenCheckbox = document.querySelector('input#auswaehlenCheckbox');
        auswaehlenCheckbox.addEventListener('change', toggleDeleteButton);

        document.querySelectorAll('[id="deleteCheckbox"]').forEach(function (checkbox) {
            checkbox.addEventListener('change', toggleDeleteButton);
      });
    }
    
    function formatiereDatum(langesDatum) {
        const datumObjekt = new Date(langesDatum); // Datum als Objekt erstellen

        // Datumskomponenten extrahieren
        const tag = datumObjekt.getDate();
        const monat = datumObjekt.getMonth() + 1; // Monat ist nullbasiert (0-11)
        //const jahr = datumObjekt.getFullYear();

        // Führende Nullen hinzufügen, wenn nötig
        const formatierterTag = tag < 10 ? '0' + tag : tag;
        const formatierterMonat = monat < 10 ? '0' + monat : monat;

        // Datum im DD.MM.YYYY Format zusammenstellen
        const formatiertesDatum = `${formatierterTag}.${formatierterMonat}`;

        return formatiertesDatum;
    }